注解方式实现切面
# 引入aop依赖
在application.properties中加入配置
spring.aop.auto=true
切记千万不要加入多余的信息，如@EnableAspectJAutoProxy！

# 1 创建切面类 标识为@Component 由spring IoC管理
com.ouzhx.aspect.AnnotationAspect

# 2 类同时标识为@Aspect

# 3 声明 pointcut
@Pointcut("excution(* com.ouzhx.service..*(..)")
public void pointcutConfig() {}

# 4 使用不同的注解实现 通知类型
@Before(value = "pointcutConfig()")
@After(value = "pointcutConfig()")
@AfterReturning("pointcutConfig()")
@AfterThrowing("pointcutConfig()")
